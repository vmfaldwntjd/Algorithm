처음에는 다잌스트라 알고리즘을 사용하여 문제를 해결하였습니다. 그리고 시간 복잡도가 O(MlogN)
(여기서 M은 도로의 개수, N은 도시의 개수를 말합니다.)를 유지할 수 있도록 파이썬 라이브러리의 우선순위 큐를 사용하였습니다. 
전반적인 과정은 이렇습니다.
1. 도시의 연결관계를 나타내는 그래프인 2차원 리스트의 graph를 만들고, 시작 노드와 각 노드와의 거리를 나타내는 distance table을
만듭니다. 그래프에는 직접적으로 연결된 도시와 거리 정보가 담깁니다.

2. 다잌스트라 알고리즘의 원리를 이용하여 distance table을 업데이트 하고, 이 중에서 최단 거리가 k인 도시 번호를 오름차순으로 
정렬해서 나타내면 됩니다.

3. 최단 거리가 k인 도시 번호가 없을 수도 있으므로, flag라는 변수를 만들어서 해당 도시가 없으면 -1을 출력할 수 있도록 합니다.